<?xml version="1.0"?>
<root>
    <!-- Key Remaps -->
    <item>
        <name>Remap Caps Lock (⇪) to Hyper with Escape on Tap</name>
        <appendix>OS X doesn't have Hyper. This maps caps lock (actually F19) to Control + Shift + Option + Command, unless you tap it. Then it sends Escape.</appendix>
        <!-- <not>ITERM2</not> -->
        <identifier>private.caps_lock_to_hyper_or_escape</identifier>

        <autogen>
            --KeyOverlaidModifier--
            KeyCode::F19,

            KeyCode::COMMAND_L,
            ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::ESCAPE,
        </autogen>
    </item>
    <item>
        <name>Tap shift to move over words</name>
        <appendix>Shift keys move the cursor one word forward or backward when pressed alone. When pressed with other keys they act as normal shifts.</appendix>
        <identifier>private.shifts_to_forward_backward_word</identifier>

        <autogen>
            --KeyOverlaidModifier--
            KeyCode::SHIFT_R,
            ModifierFlag::SHIFT_R | ModifierFlag::NONE,
            KeyCode::SHIFT_R,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
        </autogen>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::SHIFT_L,
            ModifierFlag::SHIFT_L | ModifierFlag::NONE,
            KeyCode::SHIFT_L,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
        </autogen>
    </item>
    <!-- Make umlaut keys useful for coding, by assigning brackets and symbols to right modifier key combinations -->
    <item>
        <name>Option-Right(⌥)+Ü to Backslash \</name>
        <identifier>private.option_ue_to_backslash</identifier>
        <inputsource_only>GERMAN</inputsource_only>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::GERMAN_U_UMLAUT, ModifierFlag::OPTION_R,
            KeyCode::KEY_7, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L,
        </autogen>
    </item>
    <item>
        <name>Shift-Right(⇧)+Ü to Forward Slash /</name>
        <identifier>private.shift_right_ue_to_forward_slash</identifier>
        <inputsource_only>GERMAN</inputsource_only>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::GERMAN_U_UMLAUT, ModifierFlag::SHIFT_R,
            KeyCode::KEY_7, ModifierFlag::SHIFT_L,
        </autogen>
    </item>
    <item>
        <name>Command-Right(⌘)+Ü to Pipe |</name>
        <identifier>private.command_ue_to_pipe</identifier>
        <inputsource_only>GERMAN</inputsource_only>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::GERMAN_U_UMLAUT, ModifierFlag::COMMAND_R,
            KeyCode::KEY_7, ModifierFlag::OPTION_L,
        </autogen>
    </item>
    <item>
        <name>Shift-Right(⇧)+Ö/Ä to Curly Brackets {}</name>
        <identifier>private.shift_right_ae_oe_to_curly_brackety</identifier>
        <inputsource_only>GERMAN</inputsource_only>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::GERMAN_O_UMLAUT, ModifierFlag::SHIFT_R,
            KeyCode::KEY_8, ModifierFlag::OPTION_L,
        </autogen>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::GERMAN_A_UMLAUT, ModifierFlag::SHIFT_R,
            KeyCode::KEY_9, ModifierFlag::OPTION_L,
        </autogen>
    </item>
    <!-- Special Triggers -->
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_Sublime</name>
        <url type="file">/Applications/Sublime Text.app</url>
    </vkopenurldef>
    <item>
        <name>Open Sublime Text with Fn+S</name>
        <identifier>private.subl_on_fn_s</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::S, ModifierFlag::FN,
            KeyCode::VK_OPEN_URL_APP_Sublime,
        </autogen>
    </item>

    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_SHELL_mpv</name>
        <url type="shell">
            <![CDATA[   mpvp    ]]>
        </url>
    </vkopenurldef>
    <item>
        <name>Run 'mpvp' on Fn+M</name>
        <identifier>private.mpvp_on_fn_m</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::M, ModifierFlag::FN,
            KeyCode::VK_OPEN_URL_SHELL_mpv,
        </autogen>
    </item>
    <appdef>
        <appname>ITERM2</appname>
        <equal>com.googlecode.iterm2</equal>
    </appdef>
    
    <!-- <item> -->
    <!--     <name>Swap Hyper (Caps Lock) and Left Ctrl</name> -->
    <!--     <identifier>private.swap_hyper_left_ctrl</identifier> -->
    <!--     <only>ITERM2</only> -->
    <!--     <autogen> -->
    <!--         __KeyToKey__ -->
    <!--         KeyCode::CONTROL_L, --> 
            
    <!--         KeyCode::COMMAND_L, -->
    <!--         ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, -->
    <!--     </autogen> -->
    <!--     <autogen> -->
    <!--         --KeyOverlaidModifier-- -->
    <!--         KeyCode::F19, --> 
            
    <!--         KeyCode::CONTROL_L, -->
    <!--         KeyCode::ESCAPE -->
    <!--     </autogen> -->
    <!-- </item> -->
</root>
